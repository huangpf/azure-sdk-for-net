// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The parameters to list service SAS credentials of a speicific resource.
    /// </summary>
    public partial class ServiceSasParameters
    {
        /// <summary>
        /// Initializes a new instance of the ServiceSasParameters class.
        /// </summary>
        public ServiceSasParameters() { }

        /// <summary>
        /// Initializes a new instance of the ServiceSasParameters class.
        /// </summary>
        public ServiceSasParameters(string canonicalizedResource, string resource, string permissions = default(string), string iPAddressOrRange = default(string), HttpProtocol? protocols = default(HttpProtocol?), DateTime? sharedAccessStartTime = default(DateTime?), DateTime? sharedAccessExpiryTime = default(DateTime?), string identifier = default(string), string partitionKeyStart = default(string), string partitionKeyEnd = default(string), string rowKeyStart = default(string), string rowKeyEnd = default(string), string keyToSign = default(string), string cacheControl = default(string), string contentDisposition = default(string), string contentEncoding = default(string), string contentLanguage = default(string), string contentType = default(string))
        {
            CanonicalizedResource = canonicalizedResource;
            Resource = resource;
            Permissions = permissions;
            IPAddressOrRange = iPAddressOrRange;
            Protocols = protocols;
            SharedAccessStartTime = sharedAccessStartTime;
            SharedAccessExpiryTime = sharedAccessExpiryTime;
            Identifier = identifier;
            PartitionKeyStart = partitionKeyStart;
            PartitionKeyEnd = partitionKeyEnd;
            RowKeyStart = rowKeyStart;
            RowKeyEnd = rowKeyEnd;
            KeyToSign = keyToSign;
            CacheControl = cacheControl;
            ContentDisposition = contentDisposition;
            ContentEncoding = contentEncoding;
            ContentLanguage = contentLanguage;
            ContentType = contentType;
        }

        /// <summary>
        /// Sets the canonical path to the signed resource.
        /// </summary>
        [JsonProperty(PropertyName = "canonicalizedResource")]
        public string CanonicalizedResource { get; set; }

        /// <summary>
        /// Sets the signed services accessible with the service SAS. Possible
        /// values include: 'b', 'c', 'f', 's'
        /// </summary>
        [JsonProperty(PropertyName = "signedResource")]
        public string Resource { get; set; }

        /// <summary>
        /// Sets the signed permissions for the service SAS. Possible values
        /// include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
        /// </summary>
        [JsonProperty(PropertyName = "signedPermission")]
        public string Permissions { get; set; }

        /// <summary>
        /// Sets an IP address or a range of IP addresses from which to accept
        /// requests.
        /// </summary>
        [JsonProperty(PropertyName = "signedIp")]
        public string IPAddressOrRange { get; set; }

        /// <summary>
        /// Sets the protocol permitted for a request made with the account
        /// SAS. Possible values include: 'https,http', 'https'
        /// </summary>
        [JsonProperty(PropertyName = "signedProtocol")]
        public HttpProtocol? Protocols { get; set; }

        /// <summary>
        /// Sets the time at which the SAS becomes valid.
        /// </summary>
        [JsonProperty(PropertyName = "signedStart")]
        public DateTime? SharedAccessStartTime { get; set; }

        /// <summary>
        /// Sets the time at which the shared access signature becomes invalid.
        /// </summary>
        [JsonProperty(PropertyName = "signedExpiry")]
        public DateTime? SharedAccessExpiryTime { get; set; }

        /// <summary>
        /// Sets a unique value up to 64 characters in length that correlates
        /// to an access policy specified for the container, queue, or table.
        /// </summary>
        [JsonProperty(PropertyName = "signedIdentifier")]
        public string Identifier { get; set; }

        /// <summary>
        /// Sets the start of partition key.
        /// </summary>
        [JsonProperty(PropertyName = "startPk")]
        public string PartitionKeyStart { get; set; }

        /// <summary>
        /// Sets the end of partition key.
        /// </summary>
        [JsonProperty(PropertyName = "endPk")]
        public string PartitionKeyEnd { get; set; }

        /// <summary>
        /// Sets the start of row key.
        /// </summary>
        [JsonProperty(PropertyName = "startRk")]
        public string RowKeyStart { get; set; }

        /// <summary>
        /// Sets the end of row key.
        /// </summary>
        [JsonProperty(PropertyName = "endRk")]
        public string RowKeyEnd { get; set; }

        /// <summary>
        /// Sets the key to sign the account SAS token with.
        /// </summary>
        [JsonProperty(PropertyName = "keyToSign")]
        public string KeyToSign { get; set; }

        /// <summary>
        /// Sets the response header override for cache control.
        /// </summary>
        [JsonProperty(PropertyName = "rscc")]
        public string CacheControl { get; set; }

        /// <summary>
        /// Sets the response header override for content disposition.
        /// </summary>
        [JsonProperty(PropertyName = "rscd")]
        public string ContentDisposition { get; set; }

        /// <summary>
        /// Sets the response header override for content encoding.
        /// </summary>
        [JsonProperty(PropertyName = "rsce")]
        public string ContentEncoding { get; set; }

        /// <summary>
        /// Sets the response header override for content language.
        /// </summary>
        [JsonProperty(PropertyName = "rscl")]
        public string ContentLanguage { get; set; }

        /// <summary>
        /// Sets the response header override for content type.
        /// </summary>
        [JsonProperty(PropertyName = "rsct")]
        public string ContentType { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (CanonicalizedResource == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CanonicalizedResource");
            }
            if (Resource == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Resource");
            }
        }
    }
}
