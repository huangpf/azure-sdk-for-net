// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Azure Storage account information.
    /// </summary>
    [JsonTransformation]
    public partial class StorageAccountInfo
    {
        /// <summary>
        /// Initializes a new instance of the StorageAccountInfo class.
        /// </summary>
        public StorageAccountInfo() { }

        /// <summary>
        /// Initializes a new instance of the StorageAccountInfo class.
        /// </summary>
        /// <param name="accessKey">the access key associated with this Azure
        /// Storage account that will be used to connect to it.</param>
        /// <param name="name">the account name associated with the Azure
        /// storage account.</param>
        /// <param name="suffix">the optional suffix for the storage
        /// account.</param>
        public StorageAccountInfo(string accessKey, string name = default(string), string suffix = default(string))
        {
            Name = name;
            AccessKey = accessKey;
            Suffix = suffix;
        }

        /// <summary>
        /// Gets the account name associated with the Azure storage account.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets the access key associated with this Azure Storage
        /// account that will be used to connect to it.
        /// </summary>
        [JsonProperty(PropertyName = "properties.accessKey")]
        public string AccessKey { get; set; }

        /// <summary>
        /// Gets or sets the optional suffix for the storage account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.suffix")]
        public string Suffix { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AccessKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccessKey");
            }
        }
    }
}
