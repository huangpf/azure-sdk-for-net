// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Request parameters for create a new user
    /// </summary>
    public partial class UserCreateParameters
    {
        /// <summary>
        /// Initializes a new instance of the UserCreateParameters class.
        /// </summary>
        public UserCreateParameters() { }

        /// <summary>
        /// Initializes a new instance of the UserCreateParameters class.
        /// </summary>
        public UserCreateParameters(string userPrincipalName, bool? accountEnabled, string displayName, string mailNickname, UserCreateParametersPasswordProfile passwordProfile)
        {
            UserPrincipalName = userPrincipalName;
            AccountEnabled = accountEnabled;
            DisplayName = displayName;
            MailNickname = mailNickname;
            PasswordProfile = passwordProfile;
        }

        /// <summary>
        /// User Principal Name
        /// </summary>
        [JsonProperty(PropertyName = "userPrincipalName")]
        public string UserPrincipalName { get; set; }

        /// <summary>
        /// Enable the account
        /// </summary>
        [JsonProperty(PropertyName = "accountEnabled")]
        public bool? AccountEnabled { get; set; }

        /// <summary>
        /// User display name
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Mail nick name
        /// </summary>
        [JsonProperty(PropertyName = "mailNickname")]
        public string MailNickname { get; set; }

        /// <summary>
        /// Password Profile
        /// </summary>
        [JsonProperty(PropertyName = "passwordProfile")]
        public UserCreateParametersPasswordProfile PasswordProfile { get; set; }

        /// <summary>
        /// Validate the object. Throws ArgumentException or ArgumentNullException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (UserPrincipalName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UserPrincipalName");
            }
            if (AccountEnabled == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountEnabled");
            }
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (MailNickname == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MailNickname");
            }
            if (PasswordProfile == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PasswordProfile");
            }
            if (this.PasswordProfile != null)
            {
                this.PasswordProfile.Validate();
            }
        }
    }
}
